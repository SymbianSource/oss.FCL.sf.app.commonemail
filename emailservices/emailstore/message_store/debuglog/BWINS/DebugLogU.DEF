EXPORTS
	??0RDebugLog@@QAE@XZ @ 1 NONAME ; RDebugLog::RDebugLog(void)
	??1RDebugLog@@UAE@XZ @ 2 NONAME ; RDebugLog::~RDebugLog(void)
	?CleanupClosePushL@RDebugLog@@QAEXXZ @ 3 NONAME ; void RDebugLog::CleanupClosePushL(void)
	?Close@RDebugLog@@QAEXXZ @ 4 NONAME ; void RDebugLog::Close(void)
	?HexDump@RDebugLog@@QBEXABVTDesC8@@0@Z @ 5 NONAME ; void RDebugLog::HexDump(class TDesC8 const &, class TDesC8 const &) const
	?LogLeakedObjects@RDebugLog@@SAXXZ @ 6 NONAME ; void RDebugLog::LogLeakedObjects(void)
	?Open@RDebugLog@@QAEXABVTDesC16@@ABVTDesC8@@PAX@Z @ 7 NONAME ; void RDebugLog::Open(class TDesC16 const &, class TDesC8 const &, void *)
	?SetCloseBetweenWrites@RDebugLog@@QAEXH@Z @ 8 NONAME ; void RDebugLog::SetCloseBetweenWrites(int)
	?Write@RDebugLog@@QBEXABVTDesC8@@0@Z @ 9 NONAME ; void RDebugLog::Write(class TDesC8 const &, class TDesC8 const &) const
	?Write@RDebugLog@@QBEXABVTDesC8@@ABVTDesC16@@@Z @ 10 NONAME ; void RDebugLog::Write(class TDesC8 const &, class TDesC16 const &) const
	?WriteFormat@RDebugLog@@QBAXABVTDesC8@@V?$TRefByValue@$$CBVTDesC16@@@@ZZ @ 11 NONAME ; void RDebugLog::WriteFormat(class TDesC8 const &, class TRefByValue<class TDesC16 const >, ...) const
	?WriteFormat@RDebugLog@@QBAXABVTDesC8@@V?$TRefByValue@$$CBVTDesC8@@@@ZZ @ 12 NONAME ; void RDebugLog::WriteFormat(class TDesC8 const &, class TRefByValue<class TDesC8 const >, ...) const
	?WriteFormat@RDebugLog@@QBEXABVTDesC8@@V?$TRefByValue@$$CBVTDesC16@@@@AAY00PAC@Z @ 13 NONAME ; void RDebugLog::WriteFormat(class TDesC8 const &, class TRefByValue<class TDesC16 const >, signed char * [1] &) const
	?WriteFormat@RDebugLog@@QBEXABVTDesC8@@V?$TRefByValue@$$CBVTDesC8@@@@AAY00PAC@Z @ 14 NONAME ; void RDebugLog::WriteFormat(class TDesC8 const &, class TRefByValue<class TDesC8 const >, signed char * [1] &) const

