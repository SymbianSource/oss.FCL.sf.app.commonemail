/*
* Copyright (c) 2007-2008 Nokia Corporation and/or its subsidiary(-ies). 
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description:  Resource definitions for project FSMailServer
*
*/



NAME FSMS


#include <eikon.rh>
#include <avkon.rsg>
#include <avkon.rh>
#include <avkon.mbg>
#include <avkon.hrh>
#include <avkon.loc>

//<cmail>
#include "fsmailserverconst.hrh"
//</cmail>
// </cmail>
#include <fsmailserver.loc>
// </cmail>

RESOURCE RSS_SIGNATURE { }
RESOURCE TBUF { buf=""; }


// ---------------------------------------------------------------------------
// r_fs_mserver_synch_not_enough_memory
// Text for out of memory notification.
// ---------------------------------------------------------------------------
//
RESOURCE TBUF r_fs_mserver_synch_not_enough_memory
    {
    buf=qtn_fs_mserver_synch_not_enough_memory;
    }

//////////////////////////////////////////////////////////////////////////////
// AUTHENTICATION
//

// Authentication soft keys.
RESOURCE CBA r_fs_mserver_softkeys_login_cancel
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyOk; txt=qtn_fse_softkey_log_in;},
        CBA_BUTTON {id=EAknSoftkeyCancel; txt= text_softkey_cancel;}
        };
    }

// Authentication dialog with AVKON text query dialog.
RESOURCE DIALOG r_fs_mserver_dialog_authentication
    {
    // EEikDialogFlagWait
    flags = EEikDialogFlagNotifyEsc | EEikDialogFlagNoDrag |
            EEikDialogFlagCbaButtons | EEikDialogFlagNoTitleBar;
    buttons=r_fs_mserver_softkeys_login_cancel;
    
    items=
        {
        // Heading pane, application sets the mailbox name here
        DLG_LINE 
            {
            type = EAknCtPopupHeadingPane;
            id = EAknMessageQueryHeaderId;
            control = AVKON_HEADING
                {
                label = "";
                };
            },

        // Password query       
        DLG_LINE
            {
            type=EAknCtQuery;
            id=EGeneralQuery;
            control= AVKON_DATA_QUERY 
                { 
                layout = ECodeLayout;
                label = qtn_fse_auth_query_password;
                control=SECRETED 
                    {
                    num_letters = KFsEmailNotifierPasswordMaxLength;
                    };
                };
            }
        };
    }


//////////////////////////////////////////////////////////////////////////////
// MESSAGE QUERY
//

// LSK buttons for message query dialogs
RESOURCE CBA_BUTTON r_fs_mserver_button_ok
    {
    id = EAknSoftkeyOk;
    txt = text_softkey_ok;
    }

// RSK buttons for message query dialogs
RESOURCE CBA_BUTTON r_fs_mserver_button_cancel
    {
    id = EAknSoftkeyCancel;
    txt = text_softkey_cancel;
    }

RESOURCE CBA_BUTTON r_fs_mserver_button_exit
    {
    id = EAknSoftkeyCancel;
    txt = text_softkey_exit;
    }

// Message query dialog with AVKON message query dialog.
RESOURCE DIALOG r_fs_mserver_dialog_message_query
{
   flags = EEikDialogFlagNoDrag | EEikDialogFlagNoTitleBar | EEikDialogFlagCbaButtons | EEikDialogFlagNotifyEsc;// | EEikDialogFlagWait;
   buttons = R_AVKON_SOFTKEYS_OK_EMPTY;
   items=
   {
      DLG_LINE
      {
         type = EAknCtPopupHeadingPane;
         id = EAknMessageQueryHeaderId;
         control = AVKON_HEADING
         {
         };
      },
      DLG_LINE
      {
         type = EAknCtMessageQuery;
         id = EAknMessageQueryContentId;
         control = AVKON_MESSAGE_QUERY
         {
         };
      }
   };
}

RESOURCE TBUF r_fs_mserver_application_name                    { buf=qtn_fse_app_name; }
RESOURCE TBUF r_fs_mserver_mailbox_name                        { buf=qtn_fse_auth_mailbox_name; }

// System message texts
RESOURCE TBUF r_fs_mserver_authenticating                      { buf=qtn_fse_login_wait_note_authenticating; }

RESOURCE TBUF r_fs_mserver_text_login_unsuccessful             { buf=qtn_fse_login_info_note_login_unsuccessful; }
RESOURCE TBUF r_fs_mserver_text_password_expired               { buf=qtn_fse_login_info_note_password_expired; }
RESOURCE TBUF r_fs_mserver_text_password_changed               { buf=qtn_fse_login_info_note_password_changed; }
RESOURCE TBUF r_fs_mserver_text_auth_canceled_try_again        { buf=qtn_fse_login_info_note_auth_canceled_try_again; }
RESOURCE TBUF r_fs_mserver_text_server_not_found_try_again     { buf=qtn_fse_login_info_note_server_not_found_try_again; }
RESOURCE TBUF r_fs_mserver_text_network_unavailable_try_again  { buf=qtn_fse_info_note_network_unavailable_try_again; }
RESOURCE TBUF r_fs_mserver_text_server_currently_busy_try_again    { buf=qtn_fse_login_info_note_server_currently_busy_try_again; }
RESOURCE TBUF r_fs_mserver_text_unable_to_connect_try_again    { buf=qtn_fse_login_info_note_unable_to_connect_try_again; }
RESOURCE TBUF r_fs_mserver_text_account_disabled               { buf=qtn_fse_login_info_note_account_disabled; }
RESOURCE TBUF r_fs_mserver_text_invalid_email_address_and_password_try_again   { buf=qtn_fse_login_info_note_invalid_email_address_and_password_try_again; }
RESOURCE TBUF r_fs_mserver_text_invalid_email_address          { buf=qtn_fse_info_note_invalid_email_address; }
RESOURCE TBUF r_fs_mserver_text_server_offline                 { buf=qtn_fse_info_note_server_offline; }
RESOURCE TBUF r_fs_mserver_text_sync_failed_try_again          { buf=qtn_fse_login_info_note_sync_failed_try_again; }
RESOURCE TBUF r_fs_mserver_text_data_deleted                   { buf=qtn_fse_login_info_note_data_deleted; }
RESOURCE TBUF r_fs_mserver_text_roaming_turned_on              { buf=qtn_fse_settings_note_roaming_turned_on; }
RESOURCE TBUF r_fs_mserver_text_roaming_costs                  { buf=qtn_fse_general_note_roaming_costs; }
RESOURCE TBUF r_fs_mserver_text_unable_to_complete             { buf=qtn_fse_error_general_unable_to_complete; }
RESOURCE TBUF r_fs_mserver_text_connection_error               { buf=qtn_fse_error_general_connection_error; }
RESOURCE TBUF r_fs_mserver_text_unable_to_connect              { buf=qtn_fse_error_general_unable_to_connect; }
RESOURCE TBUF r_fs_mserver_text_multiple_sync_errors           { buf=qtn_fse_error_general_multiple_sync_errors; }
RESOURCE TBUF r_fs_mserver_text_login_failed                   { buf=gtn_fse_login_info_note_login_failed; }
RESOURCE TBUF r_fs_mserver_text_server_cannot_found_check_settings  { buf=gtn_fse_login_info_note_server_cannot_found_check_settings; }
RESOURCE TBUF r_fs_mserver_text_unable_to_connect_to_server    { buf=gtn_fse_login_info_note_unable_to_connect; }
RESOURCE TBUF r_fs_mserver_text_disconnected                   { buf=gtn_fse_info_note_disconnected; }
RESOURCE TBUF r_fs_mserver_text_server_error_try_again         { buf=gtn_fse_info_note_server_error_try_again; }
